Grammar:

<line> ::= <lbl_def> [<drct>] [<code>]
         | <drct> [<code>]
         | <code>

<code> ::= <mnm_0>
         | <mnm_0_e> <expr>
         | <mnm_1> <reg>
         | <mnm_1_e> <reg> "," <expr>
         | <mnm_2> <reg> "," <reg>

<expr> ::= [<op>] <numb> { <op> <numb> }

<drct> ::= <drct_1> ( <08nm> | <16nm> )
         | <drct_p> <08nm> { ","  <08nm> }
         | <symbol> <drct_w> <expr>

<numb> := <08nm> | <16nm> | <symbol>

------------------------------------------------------
Parser:

def parse_line(lines):
    for(line in lines):
        parse_lbl_def(line):
        if():
        


------------------------------------------------------
Example:

Foo:       MVI A, FF

            <line>
              |
              |
<lbl_def>------------<code>
    |                  |
  Foo:                 |
        <mnm_1_e>-----<reg>---","---<expr>
            |          |       |      |
           MVI         A       ,      |
                                    <term>
                                      |
                                      |
                                    <numb>
                                      |
                                      |
                                    <8int>
                                      |
                                      FF